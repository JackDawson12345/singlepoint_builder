c
params
c
custom_values[name] || component.editable_fields[name]
component.editable_fields[name]
name
type
c
cc
c
theme.image
theme.image.attached?
theme.image.attached
theme
c
service['content']
c
service
c
service['name']
service
service = current_user.website.services.find { |s| s["id"] == theme_page_id }
current_user.website.services
theme_page_id
component.component_type
c
updated_content
component
component_page_id
theme_page_id
component.editable_fields == ""
componentHTML.include?('_class}}')
updated_content.include?('{{nav_items}}')
updated_content.include?('{{service_items}}')
c
@page_data
@page_name
c
@page_data
theme_page_id = @page_data['theme_page_id']
@page_data
theme_page_id = @page_data['theme_page_id']
@all_page_data
data
@all_page_data['inner_pages']
@page_name
c
@page_data
@page_data['theme_page_id']
@page_name = pages['theme_pages'].find { |name, data| data['theme_page_id'] == theme_page_id }&.first
    @page_name = pages['theme_pages'].find { |name, data| data['theme_page_id'] == theme_page_id }&.first
theme_page_id = @page_data['theme_page_id']
pages = current_user.website.pages
@page_data
c
@page_data['inner_pages']c
@page_data['inner_pages']
@page_data
@page_name = pages['theme_pages'].find { |name, data| data['theme_page_id'] == theme_page_id }&.first
@page_data
theme_page_id = @page_data['theme_page_id']
pages = current_user.website.pages
@page_data
c
service_page = current_user.website.pages["theme_pages"]["services"]
service
c
service_page['components']
c
@service_page['slug']
@service_page = current_user.website.pages["theme_pages"]["services"]
@service
c
service_page['inner_pages']
service_page.present?
service_page = current_user.website.pages["theme_pages"]["services"]
current_user.website.pages["theme_pages"]["services"]
current_user.website.pages
@service
v
c
@service['slug']
@service
matching_page['inner_pages']
matching_page
c
matching_page = current_user.website.pages['theme_pages'].values.find do |page|
  page['theme_page_id'] == theme_page_id
end
current_user.website.pages
current_user.website
theme_page_id = @service['parent_page']['theme_page_id']
@pageName, @themePage = @theme.pages["theme_pages"].find do |name, page|
      page["theme_page_id"] == theme_page_id
    end
theme_page_id = @service['parent_page']['theme_page_id']
@service['parent_page']['theme_page_id']
@service['parent_page']
@service
c
inner_slug
c
service['parent_page']['slug']
service['parent_page'].present?
service['featured_image']
service
service['excerpt']
item_html = service_template.dup
service_slug = service['slug'].to_s
service['name']
service
c
raw_template
c
raw_template = component.template_patterns
match[1].gsub('\\"', '"')
match = raw_template.match(/"nav_items":\s*"(.+)"\s*}/)
raw_template.match(/"nav_items":\s*"(.+)"\s*}/)
raw_template = component.template_patterns
c
raw_template.match(/"service_items":\s*"(.+)"\s*}/)
raw_template = component.template_patterns
c
component_value = class_value.split("_")[2..-1].join("_")
class_values.each do |class_value|
        component_value = class_value.split("_").last
        byebug
        updated_content = updated_content.gsub('{{'+component_value.to_s+'_class}}', class_value.to_s)
      end
class_values
class_value
component_value = class_value.split("_").last
class_value
c
class_value
c
class_value
c
<%= form.text_field name,
                    value: custom_values[name] || component.editable_fields[name],
                    placeholder: "Enter your #{name}",
                    class: "nata-sans text-sm font-normal w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-blue-500 " + 'field_' + theme_page_id.to_s + '_' + component_page_id.to_s + '_' + name.to_s %>
'field_' + theme_page_id + '_' + component_page_id + '_' + name
theme_page_id + '_' + component_page_id + '_' + name
theme_page_id
component_page_id
theme_page_id
type
name
c
class_value
class_value.split("_").last
class_value
"c6987bac-8a24-4ad5-8218-9e1a30b3a651_992e867d-2e69-4412-a4a3-91c2273bdad2_title"
class_value
c
class_values
c
new_classes
c
new_class = theme_page_id + '_' + component_page_id + '_' + value
value = class_value.gsub("_class", "")
new_class = theme_page_id + '_' + component_page_id + '_' + value
theme_page_id
component_page_id
class_value.gsub("_class", "")
class_value.gsub('', '_class')
class_value
class_value.gsub('', '_class')
class_value
cclass_value
c
class_var
c
class_variables = componentHTML.scan(/\{\{(\w+_class)\}\}/).flatten
class_variables = class_variables.flatten
class_variables = componentHTML.scan(/\{\{(\w+_class)\}\}/)
componentHTML
c
component['component_page_id']
component
c
component
@page_data
c
theme_page_id
user_id
field_values = component.editable_fields.to_h
component
componentHTML
c
componentHTML
c
user_id && theme_page_id
component.editable_fields
updated_content = componentHTML
componentHTML = component.content['html']
c
@page_data["components"]
@page_data
c
page_data
page_name
c
page_name
c
page_name
c
page_name
c
page_data
pages
page_data
page_name
c
page_name
c
@componentc
@component
c
Component.find(params[:id])
params[:id]
@component
c
@page_data['theme_page_id']
current_user.website.pages
current_user.website.page
@page_data['theme_page_id']
@page_data['c6987bac-8a24-4ad5-8218-9e1a30b3a651']
@page_data
page_data
params[:page_slug]
params
c
current_component_data['position']
current_component_data
current_component_data = page['components'].find { |comp| comp['component_page_id'] == current_component_id }
 current_component_id = params['current_component_id']
current_component_data = page['components'].find { |comp| comp['component_page_id'] == current_component_id }
page = user.website.pages["theme_pages"].values.find { |page| page["theme_page_id"] == theme_page_id }
user.website
website
params['current_component_id']
params
c
params['current_component_id']
params
c
params
c
current_component_id
c
component['component_page_id']
component
c
current_component_id
