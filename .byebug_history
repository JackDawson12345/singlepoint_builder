c
current_user.profile_image
current_user.profile_image.attached?
current_user.profile_image
c
account_settings_params
params[:remove_profile_image] == "1"
@user = current_user
c
current_user.website
current_user.website.products
c
current_user.website
current_user
c
parse_images(row[:images])
parse_categories(row[:categories])
Time.current.iso8601
generate_url_handle(row[:name])
parse_boolean(row[:track_quantity])
row[:track_quantity]
c
row
parse_boolean(row[:sell_out_of_stock])
parse_boolean(row[:track_quantity])parse_boolean(row[:sell_out_of_stock])
row[:track_quantity]
parse_boolean
parse_boolean(row[:track_quantity])
c
row[:cost_per_item]&.to_f
row[:sale_price]&.to_f || 0.0
row[:sale_price]&.to_f
row[:price]&.to_f || 0.0
row[:images]
parse_images(row[:images])
parse_categories(row[:categories])
row[:description]
row[:name]
row
c
row
c
csv_file.content_type == 'text/csv' || csv_file.original_filename.ends_with?('.csv')
csv_file
c
page_type == 'service_category'
page_type
c
@blog_categories =current_user.website.categories['blogs']
current_user.website.categories
current_user.website
c
seo_fields.all?(&:blank?)
 seo_fields = [focus_keyword, title_tag, meta_description]
focus_keyword = category['seo']['focus_keyword']
    title_tag = category['seo']['title_tag']
    meta_description = category['seo']['meta_description']
focus_keyword = category['seo']['focus_keyword']
category['seo']['title_tag'].blank?
category['seo']['title_tag']
category['seo']
category
c
seo_state(category)
cseo_state
c
seo_state
category.seo_state
category
c
@category
@category['seo'] = {"focus_keyword" => '',
                        "title_tag" => '',
                        "meta_description" => ''}
category_params.to_h
category_params
@category
c
outer_page_data
outer_page_name
c
@service_pages
c
outer_page_data['slug']
outer_page_data
outer_page_name, outer_page_data = find_outer_page_data(page, current_user.website.pages)
c
outer_page_name, outer_page_data = find_outer_page_data(page, current_user.website.pages)
outer_page_name = find_outer_page_name(page, current_user.website.pages)
c
current_user.website.pages
current_user.pages
page
current_user.website.pages["theme_pages"]["services"]
c
page
name
c
@service_pages.blank?
@service_pages
@service_pages.empty?
c
@service_pages['inner_pages']
@service_pages['inner_pages'].empty?
@service_pages['inner_pages']
@service_pages
c
current_user.website.pages
params
c
page['slug']
page
name
cname
c
page[0]
page
c
x
pages['theme_pages'].count
pages['theme_pages']
pages
pages.to_a.count
pages.to_a
pages.count
pages
c
<%= link_to subpage_name, public_send(subpage_path), class: 'nata-sans font-normal text-sm' %>
<%= link_to subpage_name, subpage_path, class: 'nata-sans font-normal text-sm' %>
subpage_path
c
subpage_name.nil?
subpage_name
c
subpage_name.nil?
subpage_name
c
subpage_name
c
email = params[:email]
      phone = params[:phone]
      fax = params[:Fax]
params[:Fax]
params[:fax]
params
email = params[:email]
      phone = params[:phone]
      fax = params[:fax]
c
params['address_line_one']
params
c
current_user.logo.attached?
exit
user.update
user.save
user = current_user.business_info = {'test': 'test'}
current_user.business_info.update({'test': 'test'})
current_user.business_info
short_description
category
name
c
params[:name]
params
c
main_page
c
theme_page_id
current_user.website.pages
theme_page_id
product = current_user.website.products.find { |s| s["id"] == theme_page_id }
product
name
c
item_html
c
index
c
index
item_html
index
c
component.template_patterns['product_images']
component.template_patterns
component
product['images'].count
product['images']
product
c
component
render_product_images
c
price
sale_price
c
discount_percentage = (((price - sale_price) / price) * 100).round(0)
discount_percentage = (((price - sale_price) / price) * 100).round(2)
sale_price
price
c
raw_template
c
raw_template = component.template_patterns['product_price']
raw_template = component.template_patterns
c
product['price']['price']
product
c
product['images'].first
product['images']
product
c
current_user.website.products.find { |s| s["id"] == theme_page_id }
c
product['inventory']['sku']
product['inventory']
product
product['shipping']['weight']
product['shipping']
product
c
product['data']['category']
product['data']
product
c
product['data']['name']
product['data']
product
product = current_user.website.products.find { |s| s["id"] == theme_page_id }
c
current_user.website.products.find { |s| s["id"] == theme_page_id }
current_user.website.products
c
current_user.website.save
product_page['inner_pages']
product_page['inner_pages'][new_product['data']['name']] = {
        "theme_page_id" => new_product['id'],
        "components" => product_page['inner_pages_components'],
        "slug" => new_product['seo']['url_handle'],
        "position" => next_position.to_s
      }
product_page['inner_pages']
product_page
product_page['inner_pages']
product_page
c
service['price']['price']
service['price']
service['images'].first
service['images']
service['seo']['url_handle']
service['seo']
service
service['data']
service['data']['slug']
