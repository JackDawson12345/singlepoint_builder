c
updated_content = updated_content.gsub("{{#{sub_key}}}", sub_value.to_s)
"{{#{sub_key}}}"
{{#{sub_key}}}
updated_content
sub_value
sub_key
c
customisations
field_types_pair
editable_field_pair
component
component_id
component_page_id
websitePages
user
c
result
c
result
c
result
c
result
customisations
ccustomisations
c
{
      field_values: field_values,
      field_styling: field_styling
    }
customisations
user
user_id
theme_page_id
field_styling
field_values
c
field_styling
field_name
has_styling
c
has_styling
field_values
c
field_values
c
field_values
c
field_values
c
field_values
c
field_values
has_styling
c
p style_pairs
class_pattern
style_string
style_pairs
style_string
c
class_pattern = /class="([^"]*\{\{#{Regexp.escape(field_class)}\}\}[^"]*)"/
style_string
c
style_string = style_properties.map { |key, value| "#{key}: #{value}" }.join('; ')
style_properties
style_string = style_properties.map { |key, value| "#{key}: #{value}" }.join('; ')
 style_properties = field_styling.except(*excluded_keys)
field_class = field_name + "_class"
excluded_keys = ['field_name', 'component_id', 'component_page_id', 'theme_page_id']
c
result
c
result
customisations
c
customisations
custom_values
c
field_styling
updated_content
field_styling
field_values
result
field_class = field_name + "_class"
updated_content
field_name + "_class"
field_name
c
field_styling['field_name']
field_styling
field_name
field_styling
cfield_styling
c
field_styling
c
field_styling
c
field_styling
c
field_styling
c
field_styling
c
field_styling
field_name
c
field_values
field_styling.count
field_styling
c
field_styling.empty?
field_styling
c
field_styling.empty?
field_styling
c
field_styling
field_styling.empty?
c
field_styling.empty?
field_styling.nil?
field_styling
c
field_styling.nil?
field_styling
c
field_styling
c
field_values
field_value
field_name
cfield_name
c
field_values
field_values['field_values']
field_values
c
customisation
customisation["field_name"]
field_values
field_styling
c
customisation['field_styling']['alignment']
customisation['field_styling']
customisation
field_values
customisation
c
field_values[customisation["field_name"]]
customisation
field_values
field_values[customisation["field_name"]]
field_values
c
style_fields
c
cc
c
customisation["field_name"]
customisation = customisations["customisations"].find { |c| c["component_page_id"] == component_page_id && c["theme_page_id"] == theme_page_id }
customisations
c
updated_content
c
class_value
'{{'+component_value.to_s+'_class}}'
component_value
c
class_value
c
component_value
byebug
c
field_valuesc
c
field_values
c
field_values
c
field_values
c
field_value
field_name
c
field_values
c
customisation
ccustomisation
c
field_values
c
customisation
c
user = User.find(user_id)
customisation = customisations["customisations"].find do |c|
      c["component_page_id"] == component_page_id && c["theme_page_id"] == theme_page_id
    end
customisations = user.website.customisations
customisation
customisation = customisations["customisations"].find do |c|
      c["component_page_id"] == component_page_id && c["theme_page_id"] == theme_page_id
    end
theme_page_id
component_page_id
customisations = user.website.customisations
user.website.customisations
user.website
 user = User.find(user_id)
user_id
component_page_id
theme_page_id
component
user_id
c
params
component_page_id
component.field_types
field_values = {}
params
component_page_id
user
theme_page_id
component
c
field_data['type']
field_data
field_name, field_data = field_types_pair.first
field_types_pair
field_types_pair.to_a.first
field_types_pair.to_a
field_types_pair[0]
field_types_pair[1]
field_types_pair
c
type['type'] == 'text'
type['type']
type
c
component.field_types[field_name]
component.field_types
component.field_types['type'][field_name]
field_name => component.field_types['type'][field_name]
component.field_types[field_name]
field_types_pair
editable_field_pair
component_page_id
component_id
c
name
component.editable_fields[name]
name
component.editable_fields
data['type']
