c
message.user.role
message.user
message
cmessage
c
[user.first_name, user.last_name].compact.join(' ').presence || user.email
user.first_name, last_name
[first_name, last_name].compact.join(' ').presence || email
user
user.email
c
user.email
user
user_id
message
c
message.created_at.strftime('%I:%M%p')
message.created_at
c
message.user_id == current_user.id
message
c
params['message']
params['chat_id']
params
c
chat.id
chat
c
paramsc
params
c
params
c
messages
c
params['search']
params
@inboxChat
c
params
c
chatOpenDateFormat = chatOpenDate.day.ordinalize + ' ' + chatOpenDate.strftime('%B %Y at %I:%M%p')
chatOpenDate = Time.now
Time.now
Date.now
c
chatOpenDateFormat = chatOpenDate.day.ordinalize + ' ' + chatOpenDate.strftime('%B %Y at %I:%M%p')
chatOpenDate.strftime('%B %Y at %I:%M%p')
chatOpenDate.day.ordinalize
#{chatOpenDate.day.ordinalize} #{chatOpenDate.strftime('%B %Y at %I:%M%p')}
chatOpenDate = chat.created_at
#{chatOpenDate.day.ordinalize} #{chatOpenDate.strftime('%B %Y at %I:%M%p')}
c
chatOpenDate
c
chat = InboxChat.find(params[:chat_id])
params[:id]
chat = InboxChat.find(params[:id])
params['chat_id']
params
c
@chats.nil?
@chats = InboxChat.where(user_id: current_user.id).count
@chats = InboxChat.where(user_id: current_user.id)
c
InboxChat.current_user
current_user.id
c
page_data['show_in_menu']
page_data
c
current_user.website.pages
    menu_item_name, menu_item_data = menu_items.find { |key, value| value["id"] == menu_item_id }
menu_items = current_user.website.menu["menu_items"]
menu_item_id = params[:menu_item_id]
menu_item_name, menu_item_data = menu_items.find { |key, value| value["id"] == menu_item_id }
menu_items = current_user.website.menu["menu_items"]
menu_item_id = params[:menu_item_id]
params['menu_item_id']
params
c
page_data['id']
page_data
c
current_user.website.pages
menu_items
menu_item_name, menu_item_data = menu_items.find { |key, value| value["id"] == menu_item_id }
menu_item_data
menu_item_name, menu_item_data = menu_items.find { |key, value| value["id"] == menu_item_id }
menu_items = current_user.website.menu["menu_items"]
menu_item_id = params[:menu_item_id]
params['menu_item_id']
params
menu_data
c
menu_data = website.menu
pages = website.pages
 website = user.website
user = current_user
c
menu_item_name, menu_item_data = menu_items.find { |key, value| value["id"] == menu_item_id }
menu_items = current_user.website.menu["menu_items"]
current_user.website.menu
menu_item_id
c
params[:menu_item_id]
params
c
page_template.components
page_template.components:
page_template
c
existing_keys.empty?
existing_keys = menu_data["menu_items"].keys.select { |key| key.start_with?("new page") }
c
menu
menu = website.menu
pages = website.pages
menu = website.menu
website = user.website
 user = current_user
website = user.website
page_template = PageTemplate.find(params['website_editor']['page_template_id'])
params['website_editor']['page_template_id']
params['website_editor']
params
c
page_template.title
page_template
page_templates
c
page_templates
c
page_templates
params['title']
title
params
c
params['type'].nil?
params['type']
c
params['type']
params
page_templates
page_templatespage_templates
params
c
page_templates
c
page_templates
params
page_templates
c
@pageTemplates = PageTemplate.where(page_type: type)
PageTemplate.count
PageTemplates
PageTemplates.count
c
page_template.screenshot
page_template
c
page_template.components['components'].count
page_template.components['components']
page_template.components
page_template
c
page_template.
page_template
c
params
c
params
c
page_template_component
component_id
params
c
params[:component_id]
component_id
params
c
component = Component.find(component_id)
component_id
c
PageTemplate.find(params[:id]).components
c
component = PageTemplate.find(params[:id])
params[:id]
params
PageTemplate
c
params
new_position
max_position
c
@page_template.components['components']
@themePage
@pageName
c
params
@page_template.components['components']
@page_template.components
@page_template
@theme.components
@theme.components["components"
@page_template = PageTemplate.find(params[:id])
c
type = params[:type]
title = params[:title]
text = params[:text]
type = params[:type]
params
c
pages = params['pages']
pages
c
params['pages']
params
c
'/manage/website/editor/' + page_data['slug'] + '/' + inner_page_data['slug']
inner_page_data['slug']
inner_page_data
c
inner_page_data
inner_page
c
inner_pagec
inner_page
c
page_data['inner_pages'].first
page_data['inner_pages']
c
options["theme_pages"]
options = current_user.website.pages
options
current_user.website.pages['theme_pages']
current_user.website.pages
c
options
coptions
c
current_user.website.pages['theme_pages']['services']
current_user.website.pages['theme_pages']['home']
current_user.website.pages['theme_pages']
current_user.website.pages
options
page_data['inner_pages']
page_data
page_name
c
page_name
c
page_name
page_data
