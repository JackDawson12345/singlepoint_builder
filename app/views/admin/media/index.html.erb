<!-- app/views/admin/media/index.html.erb -->
<div>
  <div class="sm:flex sm:items-center">
    <div class="sm:flex-auto">
      <h1 class="nata-sans page-title">Media Gallery - <%= @images.count %> Images</h1>
      <p class="nata-sans font-normal text-base">A list of all Images in your application. These images are uploaded by admins and customers</p>
    </div>
  </div>

  <div class="bg-gray-50 p-5 rounded-lg border-2 border-dashed border-gray-300 mt-5">
    <%= form_with url: admin_media_path, method: :post, multipart: true, local: true, class: "upload-form" do |form| %>
      <div class="upload-controls flex gap-4 items-center">
        <%= form.file_field :images, multiple: true, accept: "image/*", class: "hidden", id: "file-input" %>
        <label for="file-input" class="inline-block px-5 py-2.5 bg-gray-500 text-white rounded cursor-pointer transition-colors duration-200 hover:bg-gray-600">
          üìÅ Choose Images
        </label>
        <%= form.submit "Upload Images", class: "inline-block px-5 py-2.5 bg-blue-500 text-white rounded cursor-pointer transition-colors duration-200 hover:bg-blue-600 disabled:opacity-50", disabled: true %>
      </div>
      <div id="file-preview" class="hidden mt-4 flex flex-wrap gap-2"></div>
    <% end %>
  </div>

  <div>
    <% if @images.present? %>
      <div class="grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 xl:grid-cols-4 gap-5 mt-5">
        <% @images.each do |image| %>
          <div class="border border-gray-300 rounded-lg p-4 bg-white shadow-sm hover:shadow-md transition-shadow duration-200">
            <div class="relative h-48 bg-gray-100 rounded flex items-center justify-center overflow-hidden">
              <% if image[:content_type]&.start_with?('image/') %>
                <% image_url = image[:blob] ? url_for(image[:blob]) : (image[:url] || '#') %>
                <%= image_tag image_url, alt: image[:filename], class: "max-w-full max-h-full object-contain rounded",
                              onerror: "this.style.display='none'; this.nextElementSibling.style.display='flex';" %>
                <div class="hidden items-center justify-center text-center text-gray-500 p-5">
                  <div>
                    <p class="text-4xl mb-2">üñºÔ∏è</p>
                    <p class="text-sm"><%= image[:filename] %></p>
                  </div>
                </div>
              <% else %>
                <div class="flex items-center justify-center text-center text-gray-500 p-5">
                  <div>
                    <p class="text-4xl mb-2">üìÅ</p>
                    <p class="text-sm font-medium"><%= image[:filename] %></p>
                    <small class="text-xs text-gray-400"><%= image[:content_type] %></small>
                  </div>
                </div>
              <% end %>
            </div>

            <div class="mt-3">
              <p class="font-semibold text-sm text-gray-900 truncate mb-1" title="<%= image[:filename] %>">
                <%= truncate(image[:filename], length: 30) %>
              </p>
              <p class="text-xs text-gray-500 mb-1"><%= number_to_human_size(image[:size]) %></p>
              <p class="text-xs text-gray-500 mb-1"><%= image[:last_modified].strftime("%B %d, %Y") %></p>
              <% if image[:content_type] %>
                <p class="text-xs text-gray-400 mb-2"><%= image[:content_type] %></p>
              <% end %>

              <div class="flex flex-wrap gap-2 mt-3">
                <a href="<%= image[:blob] ? url_for(image[:blob]) : (image[:url] || '#') %>" target="_blank"
                   class="inline-block text-xs px-2 py-1 text-blue-600 border border-blue-600 rounded hover:bg-blue-600 hover:text-white transition-colors duration-200">
                  <%= image[:content_type]&.start_with?('image/') ? 'View Image' : 'Download File' %>
                </a>
                <button class="inline-block text-xs px-2 py-1 bg-green-500 text-white border-0 rounded hover:bg-green-600 transition-colors duration-200 copy-link-btn"
                        onclick="copyToClipboard('<%= image[:blob] ? url_for(image[:blob]) : (image[:url] || '#') %>', this)">
                  üìã Copy Link
                </button>
              </div>
            </div>
          </div>
        <% end %>
      </div>
    <% else %>
      <div class="text-center py-12">
        <p class="text-gray-500">No files found in the S3 bucket.</p>
      </div>
    <% end %>
  </div>
</div>

<script>
    document.addEventListener('DOMContentLoaded', function() {
        const fileInput = document.getElementById('file-input');
        const filePreview = document.getElementById('file-preview');
        const uploadBtn = document.querySelector('input[type="submit"]');

        if (fileInput) {
            fileInput.addEventListener('change', function(e) {
                const files = Array.from(e.target.files);
                filePreview.innerHTML = '';

                if (files.length > 0) {
                    uploadBtn.disabled = false;
                    uploadBtn.value = `Upload ${files.length} Image${files.length > 1 ? 's' : ''}`;
                    filePreview.classList.remove('hidden');

                    files.forEach(function(file) {
                        if (file.type.startsWith('image/')) {
                            const previewItem = document.createElement('div');
                            previewItem.className = 'relative w-20 h-20 border border-gray-300 rounded overflow-hidden';

                            const img = document.createElement('img');
                            img.className = 'w-full h-full object-cover';
                            img.src = URL.createObjectURL(file);

                            const filename = document.createElement('div');
                            filename.className = 'absolute bottom-0 left-0 right-0 bg-black bg-opacity-70 text-white px-1 py-0.5 text-xs overflow-hidden whitespace-nowrap text-ellipsis';
                            filename.textContent = file.name;

                            previewItem.appendChild(img);
                            previewItem.appendChild(filename);
                            filePreview.appendChild(previewItem);
                        }
                    });
                } else {
                    uploadBtn.disabled = true;
                    uploadBtn.value = 'Upload Images';
                    filePreview.classList.add('hidden');
                }
            });
        }
    });

    // Copy to clipboard function
    function copyToClipboard(url, button) {
        // Use the modern clipboard API
        if (navigator.clipboard && window.isSecureContext) {
            navigator.clipboard.writeText(url).then(function() {
                showCopyFeedback(button);
            }).catch(function(err) {
                // Fallback for clipboard API failure
                fallbackCopyToClipboard(url, button);
            });
        } else {
            // Fallback for older browsers
            fallbackCopyToClipboard(url, button);
        }
    }

    // Fallback copy method for older browsers
    function fallbackCopyToClipboard(url, button) {
        const textArea = document.createElement('textarea');
        textArea.value = url;
        textArea.style.position = 'fixed';
        textArea.style.left = '-999999px';
        textArea.style.top = '-999999px';
        document.body.appendChild(textArea);
        textArea.focus();
        textArea.select();

        try {
            document.execCommand('copy');
            showCopyFeedback(button);
        } catch (err) {
            console.error('Failed to copy: ', err);
            button.textContent = '‚ùå Failed';
            setTimeout(function() {
                button.textContent = 'üìã Copy Link';
            }, 2000);
        }

        document.body.removeChild(textArea);
    }

    // Show visual feedback when copy succeeds
    function showCopyFeedback(button) {
        const originalText = button.textContent;
        button.textContent = '‚úì Copied!';
        button.classList.add('bg-gray-500');
        button.classList.remove('bg-green-500', 'hover:bg-green-600');

        setTimeout(function() {
            button.textContent = originalText;
            button.classList.remove('bg-gray-500');
            button.classList.add('bg-green-500', 'hover:bg-green-600');
        }, 2000);
    }
</script>