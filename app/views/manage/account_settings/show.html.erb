<div class="mb-5">
  <div class="flex items-center gap-3">
    <div>
      <h1 class="nata-sans page-title">Account Settings</h1>
      <p class="nata-sans">View and update your account details, profile and more.</p>
    </div>
  </div>
</div>

<div class="space-y-5">
  <div class="flex gap-4">
    <div class="w-7/10 bg-gray-50 rounded-lg">
      <div class="py-4 px-6 border-b">
        <h2 class="nata-sans text-lg font-semibold">Account Info</h2>
      </div>
      <div class="py-4 px-6 ">
        <!-- app/views/manage/account_settings/index.html.erb -->
        <%= form_with url: manage_account_settings_path, method: :patch, local: false, class: "w-full w-full flex flex-col gap-4", id: "site-name-form", html: { multipart: true } do |form| %>

          <div class="flex gap-4">
            <div class="w-8/10 flex flex-col gap-4">
              <div>
                <%= form.label :first_name, class: 'nata-sans' %>
                <%= form.text_field :first_name,
                                    value: current_user.first_name,
                                    placeholder: "First Name",
                                    class: "nata-sans w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500",
                                    onblur: "submitForm()" %>
              </div>
              <div>
                <%= form.label :last_name, class: 'nata-sans' %>
                <%= form.text_field :last_name,
                                    value: current_user.last_name,
                                    placeholder: "Last Name",
                                    class: "nata-sans w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500",
                                    onblur: "submitForm()" %>
              </div>
            </div>

            <!-- Profile Image Section -->
            <div class="w-2/10 flex flex-col relative h-25">
              <%= form.label :profile_image, "Profile Image", class: 'nata-sans mb-2' %>

              <!-- Current Image Display -->
              <div class="profile-image-container mb-3 relative">
                <% if current_user.profile_image.attached? %>
                  <div class="current-image-wrapper">
                    <%= image_tag current_user.profile_image,
                                  class: "w-25 h-25 rounded-full object-cover border-2 border-gray-300 mx-auto",
                                  id: "current-profile-image",
                                  alt: "Current profile picture" %>
                  </div>
                <% else %>
                  <div class="no-image-placeholder w-25 h-25 rounded-full bg-gray-300 flex items-center justify-center mx-auto border-2 border-gray-300">
              <span class="text-gray-600 font-semibold text-lg">
                <%= current_user.email.first(2).upcase %>
              </span>
                  </div>
                <% end %>
                <!-- Custom Upload Button -->
                <label for="profile-image-input" class="absolute bottom-0 right-5 cursor-pointer bg-white rounded-full p-2 shadow-lg" style="width: fit-content;">
                  <svg class="fill-blue-500" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 16 16" id="Camera-Light--Streamline-Phosphor" height="16" width="16">
                    <path d="M14.14901875 2.92705625h-2.212875l-1.092225 -1.63948125c-0.085675 -0.12841875 -0.22993125 -0.20545 -0.3843125 -0.205225H5.54039375c-0.15438125 -0.000225 -0.2986375 0.07680625 -0.3843125 0.205225L4.0630875 2.92705625H1.85098125C0.917075 2.92705625 0.16 3.6841375 0.16 4.6180375v8.60863125c0 0.9339 0.757075 1.69098125 1.69098125 1.69098125h12.2980375c0.93390625 0 1.69098125 -0.75708125 1.69098125 -1.69098125V4.6180375c0 -0.9339 -0.757075 -1.69098125 -1.69098125 -1.69098125Zm0.76863125 10.2996125c0 0.4245 -0.34413125 0.768625 -0.76863125 0.768625H1.85098125c-0.4245 0 -0.76863125 -0.344125 -0.76863125 -0.768625V4.6180375c0 -0.4245125 0.34411875 -0.76864375 0.76863125 -0.768625h2.45960625c0.15438125 0.000225 0.2986375 -0.07680625 0.3843125 -0.205225l1.09221875 -1.63948125h4.42499375l1.0929875 1.63948125c0.08568125 0.128425 0.22993125 0.20545625 0.3843125 0.205225h2.45960625c0.4245 0 0.76863125 0.344125 0.76863125 0.768625ZM8 5.38666875c-2.48509375 0 -4.03828125 2.69019375 -2.79573125 4.84235 1.24254375 2.15215625 4.34891875 2.15215625 5.5914625 0 0.2833375 -0.49075625 0.43250625 -1.04744375 0.43250625 -1.61411875 0 -1.78290625 -1.44533125 -3.22823125 -3.2282375 -3.22823125Zm0 5.5341125c-1.77506875 0 -2.8844875 -1.92156875 -1.99695 -3.45881875 0.88753125 -1.53725625 3.10636875 -1.53725625 3.9939 0 0.2023875 0.3505375 0.30893125 0.748175 0.30893125 1.1529375 0 1.27350625 -1.032375 2.30588125 -2.30588125 2.30588125Z" stroke-width="0.0625"></path>
                  </svg>
                </label>
                <!-- Image Preview (hidden by default) -->
                <div class="image-preview-container hidden" id="imagePreviewContainer">
                  <img id="imagePreview" class="w-25 h-25 rounded-full object-cover border-2 border-blue-500 mx-auto" alt="Preview">
                </div>
              </div>

              <!-- File Input -->
              <%= form.file_field :profile_image,
                                  accept: "image/*",
                                  class: "hidden",
                                  id: "profile-image-input",
                                  onchange: "handleImagePreview(this); submitForm();" %>

              <!-- Remove Image Option (if image exists) -->
              <% if current_user.profile_image.attached? %>
                <div class="mt-2">
                  <%= form.check_box :remove_profile_image,
                                     { class: "mr-1 hidden", onchange: "handleRemoveImage(this); submitForm();" },
                                     "1", "" %>
                  <%= form.label :remove_profile_image, "Remove Image", class: "nata-sans text-blue-500 text-xs cursor-pointer", style: "position: absolute; margin: auto;  left: calc(50% - 43.5px);" %>
                </div>
              <% end %>
            </div>
          </div>

          <div class="flex gap-4 pt-4 border-t mt-4">
            <div class="w-1/2">
              <%= form.label :site_url_prefix, 'Site URL Prefix', class: 'nata-sans' %>
              <%= form.text_field :site_url_prefix,
                                  value: current_user.site_url_prefix,
                                  placeholder: "Site Url Prefix",
                                  class: "nata-sans w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500",
                                  onblur: "submitForm()" %>
            </div>
            <div class="w-1/2">
              <%= form.label :account_language, class: 'nata-sans' %>
              <%= form.text_field :account_language,
                                  value: current_user.account_language,
                                  placeholder: "Account Language",
                                  class: "nata-sans w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500",
                                  onblur: "submitForm()" %>
            </div>
          </div>

        <% end %>
      </div>
    </div>
    <div class="w-3/10 bg-gray-50 rounded-lg">
      <div class="py-4 px-6 border-b">
        <h2 class="nata-sans text-lg font-semibold">Account Security</h2>
      </div>
      <div class="py-4 px-6 space-y-3">

        <div class="flex gap-2">
          <div class="mt-1.5">
            <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 16 16" class="fill-blue-500" id="Check-Circle-Light--Streamline-Phosphor" height="20" width="20">
              <path d="M11.40040625 5.82939375c0.17983125 0.18005625 0.17983125 0.47174375 0 0.6518l-4.3043125 4.3043125c-0.18005625 0.17983125 -0.47174375 0.17983125 -0.65179375 0l-1.84470625 -1.84470625c-0.242025 -0.259725 -0.11213125 -0.68405625 0.2338125 -0.76379375 0.14928125 -0.03440625 0.30590625 0.00755625 0.41798125 0.112l1.51880625 1.5180375 3.97841875 -3.97765c0.18005625 -0.179825 0.47174375 -0.179825 0.65179375 0ZM15.84 8c0 6.0352375 -6.53333125 9.80725625 -11.76 6.7896375 -5.22666875 -3.01761875 -5.22666875 -10.5616625 0 -13.579275C5.27193125 0.5222 6.623675 0.1599375 8 0.16c4.32780625 0.00508125 7.83491875 3.51219375 7.84 7.84Zm-0.92235625 0c0 -5.32520625 -5.7647 -8.6534625 -10.37646875 -5.99085625 -4.6117625 2.6626 -4.6117625 9.3191125 0 11.9817125 1.05170625 0.60720625 2.24441875 0.92684375 3.458825 0.9267875C11.81875 14.91340625 14.9134125 11.81875 14.91764375 8Z" stroke-width="0.0625"></path>
            </svg>
          </div>
          <div>
            <p class="nata-sans m-0 text-base font-semibold">Confirm email</p>
            <p class="nata-sans m-0 text-sm">Your email is confirmed</p>
            <a href="#change-email" class="nata-sans m-0 text-sm text-blue-500 cursor-pointer">Change</a>
          </div>
        </div>
        <div class="flex gap-2">
          <div class="mt-1.5">
            <% if current_user.otp_required_for_login %>
              <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 16 16" class="fill-blue-500" id="Check-Circle-Light--Streamline-Phosphor" height="20" width="20">
                <path d="M11.40040625 5.82939375c0.17983125 0.18005625 0.17983125 0.47174375 0 0.6518l-4.3043125 4.3043125c-0.18005625 0.17983125 -0.47174375 0.17983125 -0.65179375 0l-1.84470625 -1.84470625c-0.242025 -0.259725 -0.11213125 -0.68405625 0.2338125 -0.76379375 0.14928125 -0.03440625 0.30590625 0.00755625 0.41798125 0.112l1.51880625 1.5180375 3.97841875 -3.97765c0.18005625 -0.179825 0.47174375 -0.179825 0.65179375 0ZM15.84 8c0 6.0352375 -6.53333125 9.80725625 -11.76 6.7896375 -5.22666875 -3.01761875 -5.22666875 -10.5616625 0 -13.579275C5.27193125 0.5222 6.623675 0.1599375 8 0.16c4.32780625 0.00508125 7.83491875 3.51219375 7.84 7.84Zm-0.92235625 0c0 -5.32520625 -5.7647 -8.6534625 -10.37646875 -5.99085625 -4.6117625 2.6626 -4.6117625 9.3191125 0 11.9817125 1.05170625 0.60720625 2.24441875 0.92684375 3.458825 0.9267875C11.81875 14.91340625 14.9134125 11.81875 14.91764375 8Z" stroke-width="0.0625"></path>
              </svg>
            <% else %>
              <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 16 16" fill="#000000" id="Check-Circle-Light--Streamline-Phosphor" height="20" width="20">
                <path d="M11.40040625 5.82939375c0.17983125 0.18005625 0.17983125 0.47174375 0 0.6518l-4.3043125 4.3043125c-0.18005625 0.17983125 -0.47174375 0.17983125 -0.65179375 0l-1.84470625 -1.84470625c-0.242025 -0.259725 -0.11213125 -0.68405625 0.2338125 -0.76379375 0.14928125 -0.03440625 0.30590625 0.00755625 0.41798125 0.112l1.51880625 1.5180375 3.97841875 -3.97765c0.18005625 -0.179825 0.47174375 -0.179825 0.65179375 0ZM15.84 8c0 6.0352375 -6.53333125 9.80725625 -11.76 6.7896375 -5.22666875 -3.01761875 -5.22666875 -10.5616625 0 -13.579275C5.27193125 0.5222 6.623675 0.1599375 8 0.16c4.32780625 0.00508125 7.83491875 3.51219375 7.84 7.84Zm-0.92235625 0c0 -5.32520625 -5.7647 -8.6534625 -10.37646875 -5.99085625 -4.6117625 2.6626 -4.6117625 9.3191125 0 11.9817125 1.05170625 0.60720625 2.24441875 0.92684375 3.458825 0.9267875C11.81875 14.91340625 14.9134125 11.81875 14.91764375 8Z" stroke-width="0.0625"></path>
              </svg>
            <% end %>
          </div>
          <div>
            <p class="nata-sans m-0 text-base font-semibold">2-step verification</p>
            <p class="nata-sans m-0 text-sm">Protect your Wix account with an extra layer of security.</p>
            <% if current_user.otp_required_for_login %>
              <p class="nata-sans m-0 text-sm text-blue-500">Enabled</p>
            <% else %>
              <a href="#enable-2fa-link" class="nata-sans m-0 text-sm text-blue-500 cursor-pointer">Enable</a>
            <% end %>
          </div>
        </div>
        <div class="flex gap-2">
          <div class="mt-1.5">
            <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 16 16" class="fill-blue-500" id="Check-Circle-Light--Streamline-Phosphor" height="20" width="20">
              <path d="M11.40040625 5.82939375c0.17983125 0.18005625 0.17983125 0.47174375 0 0.6518l-4.3043125 4.3043125c-0.18005625 0.17983125 -0.47174375 0.17983125 -0.65179375 0l-1.84470625 -1.84470625c-0.242025 -0.259725 -0.11213125 -0.68405625 0.2338125 -0.76379375 0.14928125 -0.03440625 0.30590625 0.00755625 0.41798125 0.112l1.51880625 1.5180375 3.97841875 -3.97765c0.18005625 -0.179825 0.47174375 -0.179825 0.65179375 0ZM15.84 8c0 6.0352375 -6.53333125 9.80725625 -11.76 6.7896375 -5.22666875 -3.01761875 -5.22666875 -10.5616625 0 -13.579275C5.27193125 0.5222 6.623675 0.1599375 8 0.16c4.32780625 0.00508125 7.83491875 3.51219375 7.84 7.84Zm-0.92235625 0c0 -5.32520625 -5.7647 -8.6534625 -10.37646875 -5.99085625 -4.6117625 2.6626 -4.6117625 9.3191125 0 11.9817125 1.05170625 0.60720625 2.24441875 0.92684375 3.458825 0.9267875C11.81875 14.91340625 14.9134125 11.81875 14.91764375 8Z" stroke-width="0.0625"></path>
            </svg>
          </div>
          <div>
            <p class="nata-sans m-0 text-base font-semibold">Recent login</p>
            <% recent_login = current_user.login_activities.order(login_at: :desc).first %>
            <p class="nata-sans m-0 text-sm"><%= recent_login.operating_system %> , <%= recent_login.browser_display %><br><%= recent_login.login_at.strftime("%a %e, %Y, %I:%M%p") %> <br><%= recent_login.location %></p>
            <a href="#login-activity-table" class="nata-sans m-0 text-sm text-blue-500">See Recent Logins</a>
          </div>
        </div>
      </div>
    </div>
  </div>

  <div class="w-full bg-gray-50 rounded-lg" id="change-email">
    <div class="py-4 px-6 border-b">
      <h2 class="nata-sans text-lg font-semibold">Login Info</h2>
    </div>
    <div class="py-4 px-6">
      <div class="flex flex-col gap-2 border-b pb-4 mb-2">
        <label for="account_email" class="nata-sans">Account Email</label>
        <div class="flex gap-4">
          <div class="w-4/5">
            <div id="email-display" class="py-2 px-3 border bg-white rounded nata-sans cursor-pointer hover:bg-gray-50 transition-colors">
              <%= @user.email %>
            </div>
          </div>
          <div class="w-1/5 flex justify-end items-center gap-2">
            <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 16 16" fill="#000000" id="Check-Light--Streamline-Phosphor" height="14" width="14">
              <path d="M15.710975 3.20610625 5.4553125 13.46176875c-0.1876875 0.18745625 -0.49174375 0.18745625 -0.6794375 0L0.289025 8.9749125c-0.25228125 -0.27075 -0.11685625 -0.71306875 0.24375625 -0.796175 0.15560625 -0.0358625 0.31885625 0.00788125 0.43568125 0.1167375l4.14713125 4.14633125L15.0315375 2.52666875c0.27075 -0.25228125 0.713075 -0.1168625 0.796175 0.24375625 0.0358625 0.1556 -0.00788125 0.31885625 -0.1167375 0.43568125Z" stroke-width="0.0625"></path>
            </svg>
            <p class="nata-sans text-sm">Confirmed</p>
          </div>
        </div>
      </div>
      <div class="flex flex-col gap-2">
        <label for="account_email" class="nata-sans">Password</label>
        <div class="flex gap-4">
          <div class="w-4/5">
            <div class="py-2 px-3 border bg-white rounded nata-sans">
              ***************
            </div>
          </div>
          <div class="w-1/5 flex justify-end items-center">
            <button id="edit-password-btn" class="border py-2 px-4 rounded-full nata-sans text-sm text-blue-500">Edit Password</button>
          </div>
        </div>
      </div>
    </div>
  </div>

  <div class="w-full bg-gray-50 rounded-lg" id="enable-2fa-link">
    <div class="py-4 px-6 border-b">
      <h2 class="nata-sans text-lg font-semibold">2-Step Verification</h2>
      <p>Protect your SinglePoint account  by adding an extra layer of security when you log in with an email and password.</p>
    </div>
    <div class="py-4 px-6 flex gap-4">
      <div class="flex items-center gap-4 w-4/5">
        <div>
          <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 16 16" fill="#000000" id="Qr-Code-Light--Streamline-Phosphor" height="24" width="24">
            <path d="M5.81209375 0.16h-4.3758125C0.7314125 0.16 0.16 0.7314125 0.16 1.43628125v4.3758125c0 0.70489375 0.5713875 1.2763125 1.27628125 1.27628125h4.3758125c0.70484375 -0.00003125 1.27628125 -0.57143125 1.27628125 -1.27628125v-4.3758125c0 -0.70486875 -0.5714125 -1.27628125 -1.27628125 -1.27628125Zm0.182325 5.65209375c0 0.10069375 -0.08163125 0.182325 -0.182325 0.182325h-4.3758125c-0.1007 0 -0.182325 -0.08163125 -0.182325 -0.182325v-4.3758125c0 -0.1007 0.081625 -0.18233125 0.182325 -0.182325h4.3758125c0.10069375 0 0.182325 0.08163125 0.182325 0.182325Zm-0.182325 3.0995375h-4.3758125C0.7313875 8.9116 0.16 9.48301875 0.16 10.18790625v4.3758125c0 0.704875 0.5714125 1.27628125 1.27628125 1.27628125h4.3758125c0.70486875 0 1.27628125 -0.57140625 1.27628125 -1.27628125v-4.3758125c0 -0.70484375 -0.5714375 -1.27624375 -1.27628125 -1.276275Zm0.182325 5.6520875c0 0.10069375 -0.08163125 0.182325 -0.182325 0.18233125h-4.3758125c-0.1007 0 -0.182325 -0.08163125 -0.182325 -0.18233125v-4.3758125c0 -0.10069375 0.081625 -0.182325 0.182325 -0.182325h4.3758125c0.10069375 0 0.182325 0.08163125 0.182325 0.182325ZM14.56371875 0.16h-4.3758125c-0.70489375 -0.00003125 -1.27628125 0.5713875 -1.27628125 1.27628125v4.3758125c0 0.70489375 0.5713875 1.2763125 1.27628125 1.27628125h4.3758125c0.70485 -0.00003125 1.27628125 -0.57143125 1.27628125 -1.27628125v-4.3758125c0 -0.70486875 -0.5714125 -1.27628125 -1.27628125 -1.27628125Zm0.182325 5.65209375c0 0.10069375 -0.081625 0.182325 -0.182325 0.182325h-4.3758125c-0.10069375 0 -0.182325 -0.08163125 -0.182325 -0.182325v-4.3758125c0 -0.1007 0.081625 -0.18233125 0.182325 -0.182325h4.3758125c0.10069375 0 0.182325 0.08163125 0.182325 0.182325ZM8.911625 12.3758125v-2.91720625c0 -0.4210625 0.45581875 -0.68423125 0.82046875 -0.47369375 0.1692375 0.09770625 0.2734875 0.278275 0.2734875 0.47369375v2.91720625c0 0.4210625 -0.4558125 0.68423125 -0.8204625 0.4737 -0.1692375 -0.0977125 -0.27349375 -0.27828125 -0.27349375 -0.4737Zm6.928375 -1.4586c0 0.3020875 -0.2448875 0.546975 -0.546975 0.546975h-2.3702375v3.8288375c0 0.302075 -0.24489375 0.5469625 -0.546975 0.546975h-2.91720625c-0.4210625 -0.00001875 -0.68423125 -0.45584375 -0.4736875 -0.8204875 0.0977125 -0.16921875 0.278275 -0.2734625 0.4736875 -0.2734625h2.37023125v-5.28744375c0 -0.4210625 0.4558125 -0.684225 0.8204625 -0.47369375 0.1692375 0.09770625 0.2734875 0.278275 0.2734875 0.47369375v0.911625h2.3702375c0.302075 0.00001875 0.546975 0.2449 0.546975 0.54698125Zm0 2.91720625v1.45860625c0 0.4210625 -0.4558125 0.684225 -0.82046875 0.47369375 -0.16923125 -0.09770625 -0.2734875 -0.27828125 -0.2734875 -0.47369375v-1.45860625c0 -0.4210625 0.45581875 -0.684225 0.82046875 -0.47369375 0.16923125 0.09770625 0.2734875 0.27828125 0.2734875 0.47369375Z" stroke-width="0.0625"></path>
          </svg>
        </div>
        <div>
          <h5 class="nata-sans font-bold">Verify logins with an authenticator app</h5>
          <p class="nata-sans text-sm">Made sure you have an authenticator app installed on your mobile device before you start.</p>
        </div>
      </div>
      <div class="w-1/5 flex justify-end">
        <% if current_user.otp_required_for_login %>
          <div class="flex items-center gap-2">
            <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 16 16" fill="#10B981" height="16" width="16">
              <path d="M15.710975 3.20610625 5.4553125 13.46176875c-0.1876875 0.18745625 -0.49174375 0.18745625 -0.6794375 0L0.289025 8.9749125c-0.25228125 -0.27075 -0.11685625 -0.71306875 0.24375625 -0.796175 0.15560625 -0.0358625 0.31885625 0.00788125 0.43568125 0.1167375l4.14713125 4.14633125L15.0315375 2.52666875c0.27075 -0.25228125 0.713075 -0.1168625 0.796175 0.24375625 0.0358625 0.1556 -0.00788125 0.31885625 -0.1167375 0.43568125Z" stroke-width="0.0625"></path>
            </svg>
            <span class="nata-sans text-sm text-green-600 font-semibold">Enabled</span>
          </div>
        <% else %>
          <button id="enable-2fa-btn" class="border py-2 px-4 rounded-full nata-sans text-sm text-blue-500 hover:bg-blue-50">Enable</button>
        <% end %>
      </div>
    </div>
  </div>

  <!-- Updated Social Logins Section -->
  <div class="w-full bg-gray-50 rounded-lg">
    <div class="py-4 px-6 border-b">
      <h2 class="nata-sans text-lg font-semibold">Social Logins</h2>
    </div>
    <div class="py-4 px-6 grid">
      <!-- Google Account -->
      <div class="border-b p-4 flex gap-2">
        <div class="w-4/5 flex gap-5 items-center">
          <div>
            <%= image_tag 'google-logo.webp', class: 'w-15 h-15' %>
          </div>
          <div>
            <h6 class="nata-sans text-base font-bold">Google Account</h6>
            <% if current_user.connected_to?('google_oauth2') %>
              <p class="nata-sans text-sm text-green-600">
                Connected: <%= current_user.connection_for('google_oauth2')&.email %>
              </p>
            <% else %>
              <p class="nata-sans text-sm text-gray-500">Not connected</p>
            <% end %>
          </div>
        </div>
        <div class="w-1/5 flex items-center justify-end">
          <% if current_user.connected_to?('google_oauth2') %>
            <%= link_to "Disconnect",
                        account_connection_path(current_user.connection_for('google_oauth2')),
                        method: :delete,
                        class: "border py-2 px-4 rounded-full nata-sans text-sm text-red-500 hover:bg-red-50",
                        data: {
                          confirm: "Are you sure you want to disconnect your Google account?",
                          turbo_method: :delete
                        } %>
          <% else %>
            <%= button_to "Connect",
                          user_google_oauth2_omniauth_authorize_path,
                          method: :post,
                          class: "border py-2 px-4 rounded-full nata-sans text-sm text-blue-500 hover:bg-blue-50",
                          data: { turbo: false } %>
          <% end %>
        </div>
      </div>

      <!-- Facebook Account -->
      <div class="border-b p-4 flex gap-2">
        <div class="w-4/5 flex gap-5 items-center">
          <div>
            <%= image_tag 'facebook-logo.webp', class: 'w-15 h-15' %>
          </div>
          <div>
            <h6 class="nata-sans text-base font-bold">Facebook Account</h6>
            <% if current_user.connected_to?('facebook') %>
              <p class="nata-sans text-sm text-green-600">
                Connected: <%= current_user.connection_for('facebook')&.email %>
              </p>
            <% else %>
              <p class="nata-sans text-sm text-gray-500">Not connected</p>
            <% end %>
          </div>
        </div>
        <div class="w-1/5 flex items-center justify-end">
          <% if current_user.connected_to?('facebook') %>
            <%= link_to "Disconnect",
                        account_connection_path(current_user.connection_for('facebook')),
                        method: :delete,
                        class: "border py-2 px-4 rounded-full nata-sans text-sm text-red-500 hover:bg-red-50",
                        data: {
                          confirm: "Are you sure you want to disconnect your Facebook account?",
                          turbo_method: :delete
                        } %>
          <% else %>
            <%= button_to "Connect",
                          user_facebook_omniauth_authorize_path,
                          method: :post,
                          class: "border py-2 px-4 rounded-full nata-sans text-sm text-blue-500 hover:bg-blue-50",
                          data: { turbo: false } %>
          <% end %>
        </div>
      </div>

      <div class="pt-4">
        <p class="nata-sans text-xs">* If you disable social logins, you will still be able to log in using your email and password.</p>
      </div>
    </div>
  </div>

  <div class="w-full bg-gray-50 rounded-lg">
    <div class="py-4 px-6 border-b">
      <h2 class="nata-sans text-lg font-semibold">Email Preferences</h2>
    </div>
    <div class="py-4 px-6 flex gap-4">
      <div class="w-4/5 flex items-center">
        <p class="nata-sans">Choose which type of emails you'd like to receive from us.</p>
      </div>
      <div class="flex justify-end w-1/5">
        <%= link_to 'Manage Preferences', email_preferences_manage_account_settings_path, class: 'border py-2 px-4 rounded-full nata-sans text-sm text-blue-500' %>
      </div>
    </div>
  </div>

  <div class="bg-gray-50 rounded-lg">
    <div class="py-4 px-6 border-b">
      <h2 class="nata-sans text-lg font-semibold">Login Activity</h2>
      <p class="nata-sans text-sm font-normal">Check when and where you’ve logged in to your account.</p>
    </div>
    <div class="">
      <div class="">
        <table id="login-activity-table" class="min-w-full divide-y divide-gray-200">
          <thead class="bg-blue-100 border-blue-300 border-t border-b">
          <tr class="">
            <th class="pl-6 pr-3 py-3 text-left text-xs font-medium text-gray-500 tracking-wider">
              Device
            </th>
            <th class="px-3 py-3 text-left text-xs font-medium text-gray-500 tracking-wider">
              <div class="inline-flex gap-2 items-center">
                Location
              </div>
            </th>
            <th class="px-3 py-3 text-left text-xs font-medium text-gray-500 tracking-wider">
              <div class="inline-flex gap-2 items-center">
                Date
              </div>
            </th>
            <th class="px-3 py-3 text-left text-xs font-medium text-gray-500 tracking-wider">
              <div class="inline-flex gap-2 items-center">
                Browser
              </div>
            </th>
            <th class="px-3 py-3 text-left text-xs font-medium text-gray-500 tracking-wider">
              <div class="inline-flex gap-2 items-center">

              </div>
            </th>
          </tr>
          </thead>
          <tbody class="bg-white divide-y divide-gray-200">
            <% current_user.login_activities.order(login_at: :desc).each_with_index do |login_activity, index| %>
              <tr class="hover:bg-blue-50 bg-gray-50 login-page-row">
              <td class="pr-3 pl-6 py-5 whitespace-nowrap text-sm font-medium text-gray-900 uppercase">
                <div class="flex gap-2">
                  <% if login_activity.device == 'Desktop' %>
                    <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 16 16" fill="#000000" id="Desktop-Tower-Light--Streamline-Phosphor" height="24" width="24">
                      <path d="M13.375 4.5a0.375 0.375 0 0 1 -0.375 0.375h-2a0.375 0.375 0 0 1 0 -0.75h2a0.375 0.375 0 0 1 0.375 0.375Zm-0.375 1.625h-2a0.375 0.375 0 0 0 0 0.75h2a0.375 0.375 0 0 0 0 -0.75Zm2.375 -3.125v10a0.875 0.875 0 0 1 -0.875 0.875h-5a0.875 0.875 0 0 1 -0.875 -0.875v-1.125H5.875v1.25h1.125a0.375 0.375 0 0 1 0 0.75H4a0.375 0.375 0 0 1 0 -0.75h1.125v-1.25H2a1.375 1.375 0 0 1 -1.375 -1.375V6a1.375 1.375 0 0 1 1.375 -1.375h6.625V3a0.875 0.875 0 0 1 0.875 -0.875h5a0.875 0.875 0 0 1 0.875 0.875ZM8.625 11.125V5.375H2a0.625 0.625 0 0 0 -0.625 0.625v4.5a0.625 0.625 0 0 0 0.625 0.625Zm6 -8.125a0.125 0.125 0 0 0 -0.125 -0.125h-5a0.125 0.125 0 0 0 -0.125 0.125v10a0.125 0.125 0 0 0 0.125 0.125h5a0.125 0.125 0 0 0 0.125 -0.125Zm-2.625 7.625a0.625 0.625 0 1 0 0.625 0.625 0.625 0.625 0 0 0 -0.625 -0.625Z" stroke-width="0.0625"></path>
                    </svg>
                  <% elsif login_activity.device == 'Desktop' %>
                    <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 16 16" fill="#000000" id="Device-Tablet-Camera-Light--Streamline-Phosphor" height="24" width="24">
                      <path d="M12.9192125 0.16H3.08078125c-0.9339 0 -1.690975 0.757075 -1.690975 1.69098125v12.2980375c0 0.93390625 0.757075 1.69098125 1.690975 1.69098125h9.83843125c0.93390625 0 1.69098125 -0.757075 1.69098125 -1.69098125V1.85098125c0 -0.93390625 -0.757075 -1.69098125 -1.69098125 -1.69098125Zm0.76863125 13.98901875c0 0.4245 -0.344125 0.768625 -0.76863125 0.768625H3.08078125c-0.4245 0 -0.768625 -0.344125 -0.768625 -0.768625V1.85098125c0 -0.4245 0.344125 -0.76863125 0.768625 -0.76863125h9.83843125c0.42450625 0 0.76863125 0.34413125 0.76863125 0.76863125ZM8.768625 3.3882375c0 0.5916875 -0.64051875 0.96149375 -1.1529375 0.66565 -0.51241875 -0.29584375 -0.51241875 -1.03545625 0 -1.3313 0.11684375 -0.0674625 0.2493875 -0.10298125 0.3843125 -0.10298125 0.4245 0 0.768625 0.344125 0.768625 0.76863125Z" stroke-width="0.0625"></path>
                    </svg>
                  <% elsif login_activity.device == 'Desktop' %>
                    <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 16 16" fill="#000000" id="Device-Mobile-Speaker-Light--Streamline-Phosphor" height="24" width="24">
                      <path d="M11 1.125H5a1.375 1.375 0 0 0 -1.375 1.375v11a1.375 1.375 0 0 0 1.375 1.375h6a1.375 1.375 0 0 0 1.375 -1.375V2.5a1.375 1.375 0 0 0 -1.375 -1.375Zm0.625 12.375a0.625 0.625 0 0 1 -0.625 0.625H5a0.625 0.625 0 0 1 -0.625 -0.625V2.5a0.625 0.625 0 0 1 0.625 -0.625h6a0.625 0.625 0 0 1 0.625 0.625ZM10.375 3.5a0.375 0.375 0 0 1 -0.375 0.375H6a0.375 0.375 0 0 1 0 -0.75h4a0.375 0.375 0 0 1 0.375 0.375Z" stroke-width="0.0625"></path>
                    </svg>
                  <% end %>
                  <p class="nata-sans font-bold"><%= login_activity.operating_system %></p>
                </div>
              </td>
              <td class="px-3 py-5 whitespace-nowrap text-sm text-gray-500">
                <p class="nata-sans"><%= login_activity.location %></p>
              </td>
              <td class="px-3 whitespace-nowrap text-sm text-gray-500">
                <% if index == 0 %>
                  <p class="nata-sans font-bold">Current Session</p>
                <% else %>
                  <p class="nata-sans"><%= login_activity.login_at.strftime("%a %e, %Y, %I:%M%p") %></p>
                <% end %>

              </td>
              <td class="px-3 text-sm text-gray-500">
                <%= login_activity.browser_display %>
              </td>
              <td class="pl-3 pr-6 text-sm text-gray-500 w-3/10">
                <% unless index == 0 %>
                  <div class="flex justify-end w-full login-page-not-you">
                    <div class="small-button h-8 w-8 border rounded-full flex items-center justify-center">
                      <svg style="transform: rotate(270deg)" class="w-4 h-4 transform transition-transform duration-200 text-blue-500" id="quick-actions-arrow" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 9l-7 7-7-7"></path>
                      </svg>
                    </div>
                    <div class="large-button hidden h-8 border rounded-full px-3 flex items-center justify-center bg-blue-500">
                      <p class="nata-sans font-bold text-white text-sm">Not You?</p>
                    </div>
                  </div>
                <% end %>

              </td>
            </tr>
            <% end %>
          </tbody>
        </table>
      </div>
    </div>
  </div>

  <div class="w-full bg-gray-50 rounded-lg">
    <div class="py-4 px-6 border-b">
      <h2 class="nata-sans text-lg font-semibold">Privacy Preferences</h2>
    </div>
    <div class="py-4 px-6 flex gap-4">
      <div class="w-4/5 flex items-center">
        <p class="nata-sans">View and manage cookie and privacy preferences for your account. <span class="text-blue-500">Read More</span></p>
      </div>
      <div class="flex justify-end w-1/5">
        <%= link_to 'Manage Preferences', privacy_preferences_manage_account_settings_path, class: 'border py-2 px-4 rounded-full nata-sans text-sm text-blue-500' %>
      </div>
    </div>
  </div>

  <div class="w-full bg-gray-50 rounded-lg">
    <div class="py-4 px-6 border-b">
      <h2 class="nata-sans text-lg font-semibold">Close Your Account</h2>
    </div>
    <div class="py-4 px-6 flex gap-4">
      <div class="w-4/5 flex items-center">
        <p class="nata-sans">To close your account, first move any remaining sites to Trash. If your site has any Premium Plans or domains connected, you'll need to cancel or transfer them first. <span class="text-blue-500">Learn More</span></p>
      </div>
      <div class="flex justify-end w-1/5">
        <button class="border py-2 px-4 rounded-full nata-sans text-sm text-red-500">Close Your Account</button>
      </div>
    </div>
  </div>

</div>

<div id="email-edit-popup" class="fixed inset-0 bg-black bg-opacity-50 hidden z-50">
  <div class="flex items-center justify-center min-h-screen p-4">
    <div class="bg-white rounded-lg shadow-xl max-w-md w-full">
      <div class="p-6">
        <div class="flex justify-between items-center mb-4">
          <h3 id="email-popup-title" class="text-lg font-semibold text-gray-900">Change Email Address</h3>
          <button id="close-email-popup" class="text-gray-400 hover:text-gray-600">
            <svg class="w-6 h-6" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12"></path>
            </svg>
          </button>
        </div>

        <form id="email-edit-form">
          <div class="mb-4">
            <label for="current-password-email" class="block text-sm font-medium text-gray-700 mb-2">
              Current Password
            </label>
            <input
              type="password"
              id="current-password-email"
              name="current_password"
              class="w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-blue-500 focus:border-blue-500"
              placeholder="Enter your current password..."
              required>
          </div>

          <div class="mb-4">
            <label for="new-email" class="block text-sm font-medium text-gray-700 mb-2">
              New Email Address
            </label>
            <input
              type="email"
              id="new-email"
              name="new_email"
              class="w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-blue-500 focus:border-blue-500"
              placeholder="Enter new email address..."
              required>
            <p class="text-xs text-gray-500 mt-1">You'll need to verify this email address</p>
          </div>

          <div class="mb-6">
            <label for="confirm-email" class="block text-sm font-medium text-gray-700 mb-2">
              Confirm New Email Address
            </label>
            <input
              type="email"
              id="confirm-email"
              name="confirm_email"
              class="w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-blue-500 focus:border-blue-500"
              placeholder="Confirm new email address..."
              required>
            <div id="email-match-error" class="text-red-500 text-xs mt-1 hidden">
              Email addresses do not match
            </div>
          </div>

          <div class="flex justify-end space-x-3">
            <button
              type="button"
              id="cancel-email-edit"
              class="px-4 py-2 text-sm font-medium text-gray-700 bg-gray-100 border border-gray-300 rounded-md hover:bg-gray-200 focus:outline-none focus:ring-2 focus:ring-gray-500">
              Cancel
            </button>
            <button
              type="submit"
              id="save-email"
              class="px-4 py-2 text-sm font-medium text-white bg-blue-600 border border-transparent rounded-md hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-blue-500">
              Update Email
            </button>
          </div>
        </form>
      </div>
    </div>
  </div>
</div>

<!-- Security Alert Modal -->
<div id="security-alert-popup" class="fixed inset-0 bg-black bg-opacity-50 hidden z-50">
  <div class="flex items-center justify-center min-h-screen p-4">
    <div class="bg-white rounded-lg shadow-xl max-w-md w-full">
      <div class="p-6">
        <div class="flex justify-between items-center mb-4">
          <h3 class="text-lg font-semibold text-gray-900 nata-sans">Don't recognize the device?</h3>
          <button id="close-security-popup" class="text-gray-400 hover:text-gray-600">
            <svg class="w-6 h-6" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12"></path>
            </svg>
          </button>
        </div>

        <div class="mb-6">
          <p class="nata-sans text-gray-700 mb-4">
            If this isn't you, change your account password. This will log out all devices. This can take up to 15 minutes.
          </p>
        </div>

        <div class="flex justify-end space-x-3">
          <button
            type="button"
            id="cancel-security-alert"
            class="px-4 py-2 text-sm font-medium text-gray-700 bg-gray-100 border border-gray-300 rounded-md hover:bg-gray-200 focus:outline-none focus:ring-2 focus:ring-gray-500 nata-sans">
            Cancel
          </button>
          <button
            type="button"
            id="change-password-from-security"
            class="px-4 py-2 text-sm font-medium text-white bg-red-600 border border-transparent rounded-md hover:bg-red-700 focus:outline-none focus:ring-2 focus:ring-red-500 nata-sans">
            Change Account Password
          </button>
        </div>
      </div>
    </div>
  </div>
</div>

<!-- Password Edit Modal -->
<div id="password-edit-popup" class="fixed inset-0 bg-black bg-opacity-50 hidden z-50">
  <div class="flex items-center justify-center min-h-screen p-4">
    <div class="bg-white rounded-lg shadow-xl max-w-md w-full">
      <div class="p-6">
        <div class="flex justify-between items-center mb-4">
          <h3 id="password-popup-title" class="text-lg font-semibold text-gray-900">Change Password</h3>
          <button id="close-password-popup" class="text-gray-400 hover:text-gray-600">
            <svg class="w-6 h-6" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12"></path>
            </svg>
          </button>
        </div>

        <form id="password-edit-form">
          <div class="mb-4">
            <label for="current-password" class="block text-sm font-medium text-gray-700 mb-2">
              Current Password
            </label>
            <input
              type="password"
              id="current-password"
              name="current_password"
              class="w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-blue-500 focus:border-blue-500"
              placeholder="Enter current password..."
              required>
          </div>

          <div class="mb-4">
            <label for="new-password" class="block text-sm font-medium text-gray-700 mb-2">
              New Password
            </label>
            <input
              type="password"
              id="new-password"
              name="new_password"
              class="w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-blue-500 focus:border-blue-500"
              placeholder="Enter new password..."
              required>
            <p class="text-xs text-gray-500 mt-1">Password must be at least 8 characters long</p>
          </div>

          <div class="mb-6">
            <label for="confirm-password" class="block text-sm font-medium text-gray-700 mb-2">
              Confirm New Password
            </label>
            <input
              type="password"
              id="confirm-password"
              name="confirm_password"
              class="w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-blue-500 focus:border-blue-500"
              placeholder="Confirm new password..."
              required>
            <div id="password-match-error" class="text-red-500 text-xs mt-1 hidden">
              Passwords do not match
            </div>
          </div>

          <div class="flex justify-end space-x-3">
            <button
              type="button"
              id="cancel-password-edit"
              class="px-4 py-2 text-sm font-medium text-gray-700 bg-gray-100 border border-gray-300 rounded-md hover:bg-gray-200 focus:outline-none focus:ring-2 focus:ring-gray-500">
              Cancel
            </button>
            <button
              type="submit"
              id="save-password"
              class="px-4 py-2 text-sm font-medium text-white bg-blue-600 border border-transparent rounded-md hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-blue-500">
              Update Password
            </button>
          </div>
        </form>
      </div>
    </div>
  </div>
</div>

<!-- 2FA Setup Modal -->
<div id="two-fa-setup-popup" class="fixed inset-0 bg-black bg-opacity-50 hidden z-50">
  <div class="flex items-center justify-center min-h-screen p-4">
    <div class="bg-white rounded-lg shadow-xl max-w-lg w-full">
      <div class="p-6">
        <div class="flex justify-between items-center mb-4">
          <h3 class="text-lg font-semibold text-gray-900 nata-sans">Setup Two-Factor Authentication</h3>
          <button id="close-2fa-popup" class="text-gray-400 hover:text-gray-600">
            <svg class="w-6 h-6" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12"></path>
            </svg>
          </button>
        </div>

        <!-- Step 1: QR Code Display -->
        <div id="step-1" class="space-y-4">
          <div class="text-center">
            <h4 class="font-semibold mb-2 nata-sans">Step 1: Scan QR Code</h4>
            <p class="text-sm text-gray-600 mb-4 nata-sans">
              Use your authenticator app (Google Authenticator, Authy, etc.) to scan this QR code:
            </p>

            <div id="qr-code-container" class="flex justify-center mb-4 bg-white p-4 rounded border">
              <!-- QR code will be loaded here -->
            </div>

            <div class="bg-gray-100 p-3 rounded-md">
              <p class="text-xs text-gray-600 mb-1 nata-sans">Or enter this secret manually:</p>
              <code id="manual-secret" class="text-sm break-all"></code>
            </div>
          </div>

          <button id="proceed-to-verify" class="w-full bg-blue-600 text-white py-2 px-4 rounded-md hover:bg-blue-700 nata-sans">
            I've Added This to My App
          </button>
        </div>

        <!-- Step 2: Verification -->
        <div id="step-2" class="space-y-4 hidden">
          <div class="text-center">
            <h4 class="font-semibold mb-2 nata-sans">Step 2: Verify Setup</h4>
            <p class="text-sm text-gray-600 mb-4 nata-sans">
              Enter the 6-digit code from your authenticator app:
            </p>
          </div>

          <form id="verify-2fa-form">
            <div class="mb-4">
              <input
                type="text"
                id="verification-code"
                name="otp_attempt"
                class="w-full px-3 py-2 border border-gray-300 rounded-md text-center text-lg tracking-widest focus:outline-none focus:ring-blue-500 focus:border-blue-500 nata-sans"
                placeholder="000000"
                maxlength="6"
                pattern="[0-9]{6}"
                autocomplete="off">
              <div id="verification-error" class="text-red-500 text-sm mt-1 hidden nata-sans"></div>
            </div>

            <div class="flex space-x-3">
              <button
                type="button"
                id="back-to-qr"
                class="flex-1 px-4 py-2 text-sm font-medium text-gray-700 bg-gray-100 border border-gray-300 rounded-md hover:bg-gray-200 nata-sans">
                Back
              </button>
              <button
                type="submit"
                id="verify-and-enable"
                class="flex-1 px-4 py-2 text-sm font-medium text-white bg-blue-600 border border-transparent rounded-md hover:bg-blue-700 nata-sans">
                Enable 2FA
              </button>
            </div>
          </form>
        </div>

        <!-- Step 3: Backup Codes -->
        <div id="step-3" class="space-y-4 hidden">
          <div class="text-center">
            <h4 class="font-semibold mb-2 nata-sans">Setup Complete!</h4>
            <p class="text-sm text-gray-600 mb-4 nata-sans">
              Save these backup codes in a safe place. Each can only be used once:
            </p>
          </div>

          <div id="backup-codes-container" class="bg-gray-100 p-4 rounded-md">
            <!-- Backup codes will be displayed here -->
          </div>

          <button id="finish-2fa-setup" class="w-full bg-green-600 text-white py-2 px-4 rounded-md hover:bg-green-700 nata-sans">
            I've Saved My Backup Codes
          </button>
        </div>
      </div>
    </div>
  </div>
</div>

<script>
    // Enhanced JavaScript with OAuth functionality
    const twoFaPopup = document.getElementById('two-fa-setup-popup');
    const enableTwoFaBtn = document.getElementById('enable-2fa-btn');
    const closeTwoFaPopupBtn = document.getElementById('close-2fa-popup');
    const step1 = document.getElementById('step-1');
    const step2 = document.getElementById('step-2');
    const step3 = document.getElementById('step-3');
    const proceedToVerifyBtn = document.getElementById('proceed-to-verify');
    const backToQrBtn = document.getElementById('back-to-qr');
    const verifyForm = document.getElementById('verify-2fa-form');
    const finishSetupBtn = document.getElementById('finish-2fa-setup');

    // Document ready function
    document.addEventListener('DOMContentLoaded', function() {
        // Handle flash messages for OAuth connections
        const flashNotice = document.querySelector('.flash-notice');
        const flashAlert = document.querySelector('.flash-alert');

        if (flashNotice) {
            showNotification(flashNotice.textContent, 'success');
            flashNotice.remove();
        }

        if (flashAlert) {
            showNotification(flashAlert.textContent, 'error');
            flashAlert.remove();
        }

        // Handle OAuth button loading states
        const oauthButtons = document.querySelectorAll('form[action*="omniauth"] button');
        oauthButtons.forEach(button => {
            button.addEventListener('click', function() {
                this.disabled = true;
                this.textContent = 'Connecting...';

                // Re-enable after 5 seconds in case of failure
                setTimeout(() => {
                    this.disabled = false;
                    this.textContent = 'Connect';
                }, 5000);
            });
        });

        // Password modal functionality
        initializePasswordModal();
    });

    // 2FA Functions
    if (enableTwoFaBtn) {
        enableTwoFaBtn.addEventListener('click', function(e) {
            e.preventDefault();
            open2FASetup();
        });
    }

    function open2FASetup() {
        step1.classList.remove('hidden');
        step2.classList.add('hidden');
        step3.classList.add('hidden');
        loadQRCode();
        twoFaPopup.classList.remove('hidden');
    }

    function loadQRCode() {
        fetch('/manage/account-settings/generate_2fa_secret', {
            method: 'POST',
            headers: {
                'X-Requested-With': 'XMLHttpRequest',
                'X-CSRF-Token': document.querySelector('meta[name="csrf-token"]').getAttribute('content')
            }
        })
            .then(response => response.json())
            .then(data => {
                if (data.success) {
                    document.getElementById('qr-code-container').innerHTML = data.qr_code;
                    document.getElementById('manual-secret').textContent = data.secret;
                } else {
                    showNotification('Failed to generate QR code: ' + (data.error || 'Unknown error'), 'error');
                }
            })
            .catch(error => {
                console.error('Error:', error);
                showNotification('Error loading setup data', 'error');
            });
    }

    // 2FA Navigation
    proceedToVerifyBtn.addEventListener('click', function() {
        step1.classList.add('hidden');
        step2.classList.remove('hidden');
        document.getElementById('verification-code').focus();
    });

    backToQrBtn.addEventListener('click', function() {
        step2.classList.add('hidden');
        step1.classList.remove('hidden');
        document.getElementById('verification-error').classList.add('hidden');
    });

    // 2FA Verification
    verifyForm.addEventListener('submit', function(e) {
        e.preventDefault();

        const code = document.getElementById('verification-code').value;
        if (!/^\d{6}$/.test(code)) {
            show2FAVerificationError('Please enter a 6-digit code');
            return;
        }

        const verifyBtn = document.getElementById('verify-and-enable');
        const originalText = verifyBtn.textContent;
        verifyBtn.textContent = 'Verifying...';
        verifyBtn.disabled = true;

        const formData = new FormData();
        formData.append('otp_attempt', code);
        formData.append('authenticity_token', document.querySelector('meta[name="csrf-token"]').getAttribute('content'));

        fetch('/manage/account-settings/enable_2fa', {
            method: 'POST',
            body: formData,
            headers: {
                'X-Requested-With': 'XMLHttpRequest'
            }
        })
            .then(response => response.json())
            .then(data => {
                if (data.success) {
                    displayBackupCodes(data.backup_codes);
                    step2.classList.add('hidden');
                    step3.classList.remove('hidden');
                } else {
                    show2FAVerificationError(data.message || 'Invalid code. Please try again.');
                }
            })
            .catch(error => {
                console.error('Error:', error);
                show2FAVerificationError('Error enabling 2FA');
            })
            .finally(() => {
                verifyBtn.textContent = originalText;
                verifyBtn.disabled = false;
            });
    });

    function displayBackupCodes(codes) {
        const container = document.getElementById('backup-codes-container');
        const codesList = codes.map(code => `<div class="font-mono text-sm py-1">${code}</div>`).join('');
        container.innerHTML = `<div class="grid grid-cols-2 gap-2">${codesList}</div>`;
    }

    finishSetupBtn.addEventListener('click', function() {
        close2FAPopup();
        location.reload();
    });

    function close2FAPopup() {
        twoFaPopup.classList.add('hidden');
        document.getElementById('verification-code').value = '';
        document.getElementById('verification-error').classList.add('hidden');
    }

    closeTwoFaPopupBtn.addEventListener('click', close2FAPopup);

    twoFaPopup.addEventListener('click', function(e) {
        if (e.target === twoFaPopup) {
            close2FAPopup();
        }
    });

    document.getElementById('verification-code').addEventListener('input', function(e) {
        e.target.value = e.target.value.replace(/\D/g, '');
        if (e.target.value.length === 6) {
            document.getElementById('verification-error').classList.add('hidden');
        }
    });

    function show2FAVerificationError(message) {
        const errorDiv = document.getElementById('verification-error');
        errorDiv.textContent = message;
        errorDiv.classList.remove('hidden');
    }

    // Email Modal Functions
    function initializeEmailModal() {
        const emailPopup = document.getElementById('email-edit-popup');
        const emailDisplay = document.getElementById('email-display');
        const closeEmailPopupBtn = document.getElementById('close-email-popup');
        const cancelEmailEditBtn = document.getElementById('cancel-email-edit');
        const emailEditForm = document.getElementById('email-edit-form');
        const newEmailInput = document.getElementById('new-email');
        const confirmEmailInput = document.getElementById('confirm-email');
        const emailMatchError = document.getElementById('email-match-error');

        // Open email popup when clicking on email display
        emailDisplay.addEventListener('click', function(e) {
            e.preventDefault();
            emailPopup.classList.remove('hidden');
            document.getElementById('current-password-email').focus();
        });

        function closeEmailPopup() {
            emailPopup.classList.add('hidden');
            emailEditForm.reset();
            emailMatchError.classList.add('hidden');
        }

        closeEmailPopupBtn.addEventListener('click', closeEmailPopup);
        cancelEmailEditBtn.addEventListener('click', closeEmailPopup);

        // Close popup when clicking outside
        emailPopup.addEventListener('click', function(e) {
            if (e.target === emailPopup) {
                closeEmailPopup();
            }
        });

        // Close popup with Escape key
        document.addEventListener('keydown', function(e) {
            if (e.key === 'Escape' && !emailPopup.classList.contains('hidden')) {
                closeEmailPopup();
            }
        });

        function validateEmailMatch() {
            if (confirmEmailInput.value && newEmailInput.value !== confirmEmailInput.value) {
                emailMatchError.classList.remove('hidden');
                return false;
            } else {
                emailMatchError.classList.add('hidden');
                return true;
            }
        }

        // Validate email match on input
        confirmEmailInput.addEventListener('input', validateEmailMatch);
        newEmailInput.addEventListener('input', function() {
            if (confirmEmailInput.value) {
                validateEmailMatch();
            }
        });

        // Handle form submission
        emailEditForm.addEventListener('submit', function(e) {
            e.preventDefault();

            if (!validateEmailMatch()) {
                return;
            }

            const currentPassword = document.getElementById('current-password-email').value;
            const newEmail = newEmailInput.value;
            const confirmEmail = confirmEmailInput.value;

            if (!currentPassword || !newEmail || !confirmEmail) {
                showNotification('All fields are required', 'error');
                return;
            }

            // Basic email validation
            const emailRegex = /^[^\s@]+@[^\s@]+\.[^\s@]+$/;
            if (!emailRegex.test(newEmail)) {
                showNotification('Please enter a valid email address', 'error');
                return;
            }

            const formData = new FormData();
            formData.append('current_password', currentPassword);
            formData.append('new_email', newEmail);
            formData.append('confirm_email', confirmEmail);
            formData.append('authenticity_token', document.querySelector('meta[name="csrf-token"]').getAttribute('content'));

            const saveBtn = document.getElementById('save-email');
            const originalText = saveBtn.textContent;
            saveBtn.textContent = 'Updating...';
            saveBtn.disabled = true;

            fetch('/manage/account-settings/update_email', {
                method: 'PATCH',
                body: formData,
                headers: {
                    'X-Requested-With': 'XMLHttpRequest'
                }
            })
                .then(response => response.json())
                .then(data => {
                    if (data.success) {
                        closeEmailPopup();
                        showNotification('Email address updated successfully!', 'success');
                        // Update the display email immediately
                        if (data.new_email) {
                            const emailDisplay = document.getElementById('email-display');
                            emailDisplay.textContent = data.new_email;
                        }
                    } else {
                        showNotification(data.message || 'Error updating email address', 'error');
                    }
                })
                .catch(error => {
                    console.error('Error:', error);
                    showNotification('Error updating email address', 'error');
                })
                .finally(() => {
                    saveBtn.textContent = originalText;
                    saveBtn.disabled = false;
                });
        });
    }

    // Password Modal Functions
    function initializePasswordModal() {
        const passwordPopup = document.getElementById('password-edit-popup');
        const closePasswordPopupBtn = document.getElementById('close-password-popup');
        const cancelPasswordEditBtn = document.getElementById('cancel-password-edit');
        const passwordEditForm = document.getElementById('password-edit-form');
        const newPasswordInput = document.getElementById('new-password');
        const confirmPasswordInput = document.getElementById('confirm-password');
        const passwordMatchError = document.getElementById('password-match-error');
        const editPasswordBtn = document.getElementById('edit-password-btn');

        editPasswordBtn.addEventListener('click', function(e) {
            e.preventDefault();
            passwordPopup.classList.remove('hidden');
            document.getElementById('current-password').focus();
        });

        function closePasswordPopup() {
            passwordPopup.classList.add('hidden');
            passwordEditForm.reset();
            passwordMatchError.classList.add('hidden');
        }

        closePasswordPopupBtn.addEventListener('click', closePasswordPopup);
        cancelPasswordEditBtn.addEventListener('click', closePasswordPopup);

        passwordPopup.addEventListener('click', function(e) {
            if (e.target === passwordPopup) {
                closePasswordPopup();
            }
        });

        document.addEventListener('keydown', function(e) {
            if (e.key === 'Escape' && !passwordPopup.classList.contains('hidden')) {
                closePasswordPopup();
            }
        });

        function validatePasswordMatch() {
            if (confirmPasswordInput.value && newPasswordInput.value !== confirmPasswordInput.value) {
                passwordMatchError.classList.remove('hidden');
                return false;
            } else {
                passwordMatchError.classList.add('hidden');
                return true;
            }
        }

        confirmPasswordInput.addEventListener('input', validatePasswordMatch);
        newPasswordInput.addEventListener('input', function() {
            if (confirmPasswordInput.value) {
                validatePasswordMatch();
            }
        });

        passwordEditForm.addEventListener('submit', function(e) {
            e.preventDefault();

            if (!validatePasswordMatch()) {
                return;
            }

            const currentPassword = document.getElementById('current-password').value;
            const newPassword = newPasswordInput.value;
            const confirmPassword = confirmPasswordInput.value;

            if (!currentPassword || !newPassword || !confirmPassword) {
                showNotification('All fields are required', 'error');
                return;
            }

            if (newPassword.length < 8) {
                showNotification('New password must be at least 8 characters long', 'error');
                return;
            }

            const formData = new FormData();
            formData.append('current_password', currentPassword);
            formData.append('new_password', newPassword);
            formData.append('confirm_password', confirmPassword);
            formData.append('authenticity_token', document.querySelector('meta[name="csrf-token"]').getAttribute('content'));

            const saveBtn = document.getElementById('save-password');
            const originalText = saveBtn.textContent;
            saveBtn.textContent = 'Updating...';
            saveBtn.disabled = true;

            fetch('/manage/account-settings/update_password', {
                method: 'PATCH',
                body: formData,
                headers: {
                    'X-Requested-With': 'XMLHttpRequest'
                }
            })
                .then(response => response.json())
                .then(data => {
                    if (data.success) {
                        closePasswordPopup();
                        showNotification('Password updated successfully!', 'success');
                    } else {
                        showNotification(data.message || 'Error updating password', 'error');
                    }
                })
                .catch(error => {
                    console.error('Error:', error);
                    showNotification('Error updating password', 'error');
                })
                .finally(() => {
                    saveBtn.textContent = originalText;
                    saveBtn.disabled = false;
                });
        });
    }

    // Image handling functions
    function handleImagePreview(input) {
        const file = input.files[0];
        const previewContainer = document.getElementById('imagePreviewContainer');
        const preview = document.getElementById('imagePreview');
        const currentImageWrapper = document.querySelector('.current-image-wrapper');
        const noImagePlaceholder = document.querySelector('.no-image-placeholder');
        const removeCheckbox = document.querySelector('input[name="remove_profile_image"]');

        if (file) {
            const reader = new FileReader();

            reader.onload = function(e) {
                preview.src = e.target.result;
                previewContainer.classList.remove('hidden');

                if (currentImageWrapper) {
                    currentImageWrapper.classList.add('hidden');
                }
                if (noImagePlaceholder) {
                    noImagePlaceholder.classList.add('hidden');
                }

                if (removeCheckbox) {
                    removeCheckbox.checked = false;
                }
            };

            reader.readAsDataURL(file);
        } else {
            previewContainer.classList.add('hidden');
            if (currentImageWrapper) {
                currentImageWrapper.classList.remove('hidden');
            }
            if (noImagePlaceholder) {
                noImagePlaceholder.classList.remove('hidden');
            }
        }
    }

    function handleRemoveImage(checkbox) {
        const previewContainer = document.getElementById('imagePreviewContainer');
        const currentImageWrapper = document.querySelector('.current-image-wrapper');
        const noImagePlaceholder = document.querySelector('.no-image-placeholder');
        const fileInput = document.getElementById('profile-image-input');

        if (checkbox.checked) {
            previewContainer.classList.add('hidden');
            if (currentImageWrapper) {
                currentImageWrapper.classList.add('hidden');
            }

            if (noImagePlaceholder) {
                noImagePlaceholder.classList.remove('hidden');
            }

            fileInput.value = '';
        } else {
            if (currentImageWrapper) {
                currentImageWrapper.classList.remove('hidden');
            }
            if (noImagePlaceholder) {
                noImagePlaceholder.classList.add('hidden');
            }
        }
    }

    // Form submission function
    function submitForm() {
        const form = document.getElementById('site-name-form');
        const formData = new FormData(form);

        fetch(form.action, {
            method: 'PATCH',
            body: formData,
            headers: {
                'X-Requested-With': 'XMLHttpRequest',
                'X-CSRF-Token': document.querySelector('meta[name="csrf-token"]').getAttribute('content')
            }
        })
            .then(response => response.json())
            .then(data => {
                if (data.status === 'success') {
                    console.log('Account updated successfully');
                    showNotification('Account updated successfully!', 'success');
                } else {
                    console.error('Update failed:', data.errors);
                    showNotification(data.errors.join(', '), 'error');
                }
            })
            .catch(error => {
                console.error('Error:', error);
                showNotification('An error occurred while updating your account.', 'error');
            });
    }

    // Enhanced notification function
    function showNotification(message, type = 'success') {
        const bgColor = type === 'success' ? 'bg-green-500' : 'bg-red-500';
        const notification = document.createElement('div');
        notification.className = `fixed top-4 right-4 px-6 py-3 rounded-md shadow-lg z-50 ${bgColor} text-white nata-sans`;
        notification.innerHTML = `
            <div class="flex items-center justify-between">
                <span>${message}</span>
                <button onclick="this.parentElement.parentElement.remove()" class="ml-4 text-white hover:text-gray-200">
                    <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12"></path>
                    </svg>
                </button>
            </div>
        `;
        document.body.appendChild(notification);

        setTimeout(() => {
            if (notification.parentNode) {
                notification.remove();
            }
        }, 5000);
    }

    document.addEventListener('DOMContentLoaded', function() {
        initializeEmailModal();
    });

    document.addEventListener('DOMContentLoaded', function() {
        const securityPopup = document.getElementById('security-alert-popup');
        const closeSecurityPopupBtn = document.getElementById('close-security-popup');
        const cancelSecurityAlertBtn = document.getElementById('cancel-security-alert');
        const changePasswordFromSecurityBtn = document.getElementById('change-password-from-security');
        const passwordPopup = document.getElementById('password-edit-popup');

        // Add click handlers to all "Not You?" buttons
        const notYouButtons = document.querySelectorAll('.login-page-not-you .large-button');

        notYouButtons.forEach(button => {
            button.addEventListener('click', function(e) {
                e.preventDefault();
                e.stopPropagation();
                openSecurityAlert();
            });
        });

        function openSecurityAlert() {
            securityPopup.classList.remove('hidden');
        }

        function closeSecurityAlert() {
            securityPopup.classList.add('hidden');
        }

        // Close popup handlers
        closeSecurityPopupBtn.addEventListener('click', closeSecurityAlert);
        cancelSecurityAlertBtn.addEventListener('click', closeSecurityAlert);

        // Close popup when clicking outside
        securityPopup.addEventListener('click', function(e) {
            if (e.target === securityPopup) {
                closeSecurityAlert();
            }
        });

        // Close popup with Escape key
        document.addEventListener('keydown', function(e) {
            if (e.key === 'Escape' && !securityPopup.classList.contains('hidden')) {
                closeSecurityAlert();
            }
        });

        // Handle "Change Account Password" button click
        changePasswordFromSecurityBtn.addEventListener('click', function() {
            // Close security popup
            closeSecurityAlert();

            // Open password change popup
            if (passwordPopup) {
                passwordPopup.classList.remove('hidden');
                // Focus on current password field
                const currentPasswordField = document.getElementById('current-password');
                if (currentPasswordField) {
                    currentPasswordField.focus();
                }
            }
        });

        // Enhanced hover functionality for "Not You?" buttons
        const loginRows = document.querySelectorAll('.login-page-not-you');

        loginRows.forEach(row => {
            const smallButton = row.querySelector('.small-button');
            const largeButton = row.querySelector('.large-button');
            let hoverTimeout;

            if (smallButton && largeButton) {
                row.addEventListener('mouseenter', function() {
                    clearTimeout(hoverTimeout);
                    smallButton.classList.add('hidden');
                    largeButton.classList.remove('hidden');
                });

                row.addEventListener('mouseleave', function() {
                    hoverTimeout = setTimeout(() => {
                        smallButton.classList.remove('hidden');
                        largeButton.classList.add('hidden');
                    }, 100); // Small delay to prevent flickering
                });
            }
        });
    });

</script>